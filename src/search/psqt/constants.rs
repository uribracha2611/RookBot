
use crate::search::psqt::weight::W;
// Base values added to each square: Pawn = 100, Knight = 300, Bishop = 300, Rook = 500, Queen = 900, King = 0
pub const PAWN_TABLE: [W; 64] = [
    W(0, 0), W(0, 0), W(0, 0), W(0, 0), W(0, 0), W(0, 0), W(0, 0), W(0, 0),  // Rank 8
    W(198, 278), W(234, 273), W(161, 258), W(195, 234), W(168, 247), W(226, 232), W(134, 265), W(89, 287),
    W(94, 194), W(107, 200), W(126, 185), W(131, 167), W(165, 156), W(156, 153), W(125, 182), W(80, 184),
    W(86, 132), W(113, 124), W(106, 113), W(121, 105), W(123, 98), W(112, 104), W(117, 117), W(77, 117),
    W(73, 113), W(98, 109), W(95, 97), W(112, 93), W(117, 93), W(106, 92), W(110, 103), W(75, 99),
    W(74, 104), W(96, 107), W(96, 94), W(90, 101), W(103, 100), W(103, 95), W(133, 99), W(88, 92),
    W(65, 113), W(99, 108), W(80, 108), W(77, 110), W(85, 113), W(124, 100), W(138, 102), W(78, 93),
    W(0, 0), W(0, 0), W(0, 0), W(0, 0), W(0, 0), W(0, 0), W(0, 0), W(0, 0),  // Rank 1
];

// [Rest of the tables remain exactly the same as before...]
pub const KNIGHT_TABLE: [W; 64] = [
    W(133, 242), W(211, 262), W(266, 287), W(251, 272), W(361, 269), W(203, 273), W(285, 237), W(193, 201),
    W(227, 275), W(259, 292), W(372, 275), W(336, 298), W(323, 291), W(362, 275), W(307, 276), W(283, 248),
    W(253, 276), W(360, 280), W(337, 310), W(365, 309), W(384, 299), W(429, 291), W(373, 281), W(344, 259),
    W(291, 283), W(317, 303), W(319, 322), W(353, 322), W(337, 322), W(369, 311), W(318, 308), W(322, 282),
    W(287, 282), W(304, 294), W(316, 316), W(313, 325), W(328, 316), W(319, 317), W(321, 304), W(292, 282),
    W(277, 277), W(291, 297), W(312, 299), W(310, 315), W(319, 310), W(317, 297), W(325, 280), W(284, 278),
    W(271, 258), W(247, 280), W(288, 290), W(297, 295), W(299, 298), W(318, 280), W(286, 277), W(281, 256),
    W(195, 271), W(279, 249), W(242, 277), W(267, 285), W(283, 278), W(272, 282), W(281, 250), W(277, 236),
];

pub const BISHOP_TABLE: [W; 64] = [
    W(271, 286), W(304, 279), W(218, 289), W(263, 292), W(275, 293), W(258, 291), W(307, 283), W(292, 276),
    W(274, 292), W(316, 296), W(282, 307), W(287, 288), W(330, 297), W(359, 287), W(318, 296), W(253, 286),
    W(284, 302), W(337, 292), W(343, 300), W(340, 299), W(335, 298), W(350, 306), W(337, 300), W(298, 304),
    W(296, 297), W(305, 309), W(319, 312), W(350, 309), W(337, 314), W(337, 310), W(307, 303), W(298, 302),
    W(294, 294), W(313, 303), W(313, 313), W(326, 319), W(334, 307), W(312, 310), W(310, 297), W(304, 291),
    W(300, 288), W(315, 297), W(315, 308), W(315, 310), W(314, 313), W(327, 303), W(318, 293), W(310, 285),
    W(304, 286), W(315, 282), W(316, 293), W(300, 299), W(307, 304), W(321, 291), W(333, 285), W(301, 273),
    W(267, 277), W(297, 291), W(286, 277), W(279, 295), W(287, 291), W(288, 284), W(261, 295), W(279, 283),
];

pub const ROOK_TABLE: [W; 64] = [
    W(532, 513), W(542, 510), W(532, 518), W(551, 515), W(563, 512), W(509, 512), W(531, 508), W(543, 505),
    W(527, 511), W(532, 513), W(558, 513), W(562, 511), W(580, 497), W(567, 503), W(526, 508), W(544, 503),
    W(495, 507), W(519, 507), W(526, 507), W(536, 505), W(517, 504), W(545, 497), W(561, 495), W(516, 497),
    W(476, 504), W(489, 503), W(507, 513), W(526, 501), W(524, 502), W(535, 501), W(492, 499), W(480, 502),
    W(464, 503), W(474, 505), W(488, 508), W(499, 504), W(509, 495), W(493, 494), W(506, 492), W(477, 489),
    W(455, 496), W(475, 500), W(484, 495), W(483, 499), W(503, 493), W(500, 488), W(495, 492), W(467, 484),
    W(456, 494), W(484, 494), W(480, 500), W(491, 502), W(499, 491), W(511, 491), W(494, 489), W(429, 497),
    W(481, 491), W(487, 502), W(501, 503), W(517, 499), W(516, 495), W(507, 487), W(463, 504), W(474, 480),
];

pub const QUEEN_TABLE: [W; 64] = [
    W(872, 891), W(900, 922), W(929, 922), W(912, 927), W(959, 927), W(944, 919), W(943, 910), W(945, 920),
    W(876, 883), W(861, 920), W(895, 932), W(901, 941), W(884, 958), W(957, 925), W(928, 930), W(954, 900),
    W(887, 880), W(883, 906), W(907, 909), W(908, 949), W(929, 947), W(956, 935), W(947, 919), W(957, 909),
    W(873, 903), W(873, 922), W(884, 924), W(884, 945), W(899, 957), W(917, 940), W(898, 957), W(901, 936),
    W(891, 882), W(874, 928), W(891, 919), W(890, 947), W(898, 931), W(896, 934), W(903, 939), W(897, 923),
    W(886, 884), W(902, 873), W(889, 915), W(898, 906), W(895, 909), W(902, 917), W(914, 910), W(905, 905),
    W(865, 878), W(892, 877), W(911, 870), W(902, 884), W(908, 884), W(915, 877), W(897, 864), W(901, 868),
    W(899, 867), W(882, 872), W(891, 878), W(910, 857), W(885, 895), W(875, 868), W(869, 880), W(850, 859),
];

pub const KING_TABLE: [W; 64] = [
    W(-65, -74), W(23, -35), W(16, -18), W(-15, -18), W(-56, -11), W(-34, 15), W(2, 4), W(13, -17),
    W(29, -12), W(-1, 17), W(-20, 14), W(-7, 17), W(-8, 17), W(-4, 38), W(-38, 23), W(-29, 11),
    W(-9, 10), W(24, 17), W(2, 23), W(-16, 15), W(-20, 20), W(6, 45), W(22, 44), W(-22, 13),
    W(-17, -8), W(-20, 22), W(-12, 24), W(-27, 27), W(-30, 26), W(-25, 33), W(-14, 26), W(-36, 3),
    W(-49, -18), W(-1, -4), W(-27, 21), W(-39, 24), W(-46, 27), W(-44, 23), W(-33, 9), W(-51, -11),
    W(-14, -19), W(-14, -3), W(-22, 11), W(-46, 21), W(-44, 23), W(-30, 16), W(-15, 7), W(-27, -9),
    W(1, -27), W(7, -11), W(-8, 4), W(-64, 13), W(-43, 14), W(-16, 4), W(9, -5), W(8, -17),
    W(-15, -53), W(36, -34), W(12, -21), W(-54, -11), W(8, -28), W(-28, -14), W(24, -24), W(14, -43),
];
pub const GAMEPHASE_INC: [i32; 12] = [0, 0, 1, 1, 1, 1, 2, 2, 4, 4, 0, 0];